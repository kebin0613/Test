<리액트(React)>
-페이스북이 웹 개발을 쉽게 하기 위해 만든 기술
-커스텀 컴포넌트를 만들고 쉽게 조합해서 뷰를 손쉽게 만들 수 있다.

<리액티브(Reactive)>
-마이크로 소프트가 창안한 개념으로 스트림과 비동기 처리 등을 LINQ에
 영향을 받은 방법으로 깔끔하게 처리할 수 있게 한 패러다임

-Reactive(Rx)를 중심으로 여러 환경에 구현이 되어있음

-넷플릭스가 주축이 되어 자바에 포팅한 RxJava와 사운드 클라우드dml
 마티아스 캐플러와 안도로이드 씬의 영웅 스퀘어의 제이크 와튼 중심이 된 rxAndroid,
 깃허브와 페이스북 엔지니어들이 중심이 되어 이끌어나가는 ReactiveCocoa가 유명

-리액트의 접근 방법을 모바일로 확장하는 페이스북의 오픈소스 프로젝트

-기존의 모바일 자바스크립트 툴들이 웹뷰를 통해 인터페이스를 구축하는 하이브리드
 방식이었다면 리액트 네이트브는 자바스크립트로 작업하지만 인터페이스는 네이티브
 위젯으로 표시하는 방법

-네이티브 UI를 통해서 이질감 없고 쾌적한 사용자 경험을 제공
-네이티브 웹 어플리케이션을 빌드하게 도와주는 UI 라이브러리

https://m.blog.naver.com/PostView.nhn?blogId=gi_balja&logNo=221284382919&proxyReferer=https%3A%2F%2Fwww.google.com%2F

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

<리액트 네이티브>
IOS = objective-c
android = java  
->마지막 컴파일링 할떄, 각각 네이티브 코드로 실행


<리액트네이티브는 어떻게 구동하는가>
1.JSX, 자바스크립트로 작성
2.자바스크립트가 object-c 혹은 java로 변환(페이스북이 만든 기술)
3.그기술에 의해서 js와 object-c의 다리역할/ js와 java의 다리역할(네이티브)을 해줘서 연결된다

 
<리액트js와 리엑티브>
-리액트js의 코드와 리액티브의 코드가 비슷하다
-차이점은 리액티브는 패키지 이름이 리액트 네이티브
  (import {text, view} from 'react-native';)
-웹에서 div,span이 있는것처럼 리액트 네이티브에는 view,text


<리액트 네이티브의 장점>
-자바스크립트를 활용할 수 있다
-커뮤니티가 엄청 크다
-많은 회사가 리액트 네이티브를 쓰고있다
 (ex>인스타그램,에어비앤비,페이스북 등등->showcase react native 검색하면 나옴)
@@@@@@최고의 장점 : IOS,Android 앱사이 사이 코드를 공유할 수 있다@@@@@@@@@ 
-모바일을 위한 레이아웃을 플레스 박스로 구현
-2주마다 새로운 업데이트가 있다.


<expo>
-리액트 네이트브로 앱을 만드는것을 도와준다
 (xcode 나 android studio 사용x)
-expo가 없을때는 리액트 네이티브로 xcode, android studio 작업을 별도로 했다
- 앱 테스트가 엄청 빠르고 편해졌다
-qr코드 스캔해서 사용
-컴퓨터에서 변경사항이 있으면 모바일에서도 자동으로 새로고침되서 적용된다
-사용하기 쉽고 심플하고 시뮬레이터 사용안해도된다.
-expo는 앱 전체를 올리는게 아니라 expo client에 push한다
 그러면 client가 앱을 실행하기 위한 코드를 다운받는다
 앱이 열릴떄마다 서버에서 새로운 버전의 코드를 다운받는다
 복잡한 승인과정을 스킵할수있다.

<Expo>
-장점 : expo mac이 없어도 ios 가능
	QR코드로 공유가능
-단점 : 무겁다(용량이크다-라이브러리多)

<코인정보를 보여주는 앱만들기>

-vscode extensions 에서 react native Tools 다운
jsx = 마크업형태(html과유사)
jsx 에서의 주석 : {/* ~~~~*/}

프로퍼티와 스테이트 차이 중요

 
 